<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Humanistic Musings</title>
    <link>/</link>
    <description>Recent content on Humanistic Musings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Is it CR7 or Messi?</title>
      <link>/2018/06/is-it-cr7-or-messi/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/is-it-cr7-or-messi/</guid>
      <description>World Cup Mode: CR vs Messi&amp;#182;To try to solidify what I have learned from Deep Learning for coders from fast.ai, I&#39;ll try to train a computer vision algorithm such that it can recognize whether is Messi or Cristiano Ronaldo in the picture. Notebook in github  or nbviewer 
Imports&amp;#182;    In&amp;nbsp;[1]: # Put these at the top of every notebook, to get automatic reloading and inline plotting %reload_ext autoreload %autoreload 2 %matplotlib inline      In&amp;nbsp;[2]: # This file contains all the main external libs we&amp;#39;ll use from fastai.</description>
    </item>
    
    <item>
      <title>Plotting Supply and Demand Curves with ggplot2</title>
      <link>/2018/05/ggsupplydemand/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/ggsupplydemand/</guid>
      <description>What is it? ggsupplyDemand is an R package that makes it extremely easy to plot basic supply and demands using ggplot2
library(ggsupplyDemand) create_supply_and_demand() %&amp;gt;% shift_demand(outwards = TRUE) %&amp;gt;% plot_supply_and_demand(consumer_surplus = TRUE)  Why? I needed to plot some basic supply and demand curves in R. Obviously, I thought of ggplot2. However, it is not that straightforward. The best resource I could find was this blogpost from Andrew Heiss. I recopilated most of his functions, created a simple API and put all the functions on an package.</description>
    </item>
    
    <item>
      <title>The Adam Smith Problem: Tidytext in R</title>
      <link>/2018/04/the-adam-smith-problem-tidytext-in-r/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/the-adam-smith-problem-tidytext-in-r/</guid>
      <description>Why? This is a fun (for me) exercise to explore Text Mining with R and make sure I can follow along.
 What is it ? Around the XIX century, some german scholars posited that Wealth of Nations’ Adam Smith was too different to Theory of Moral Sentiments’ Adam Smith, thus concluded that he must have had a change of heart somewhere along his life or that he was simply an incoherent man.</description>
    </item>
    
    <item>
      <title>Tutorial Leaflet Chorophlets</title>
      <link>/2018/04/tutorial-leaflet-chorophlets/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/tutorial-leaflet-chorophlets/</guid>
      <description>Leaflet Leaflet is javascript library. You can access it, like many other cool interactive libraries (i.e., dygraphs) thanks to the work of people in RStudio. Here, I’ll layout a basic structure for plotting simple maps in leaflet and then how to advance them and plot chorophlets.
Inspired by:
 https://rstudio.github.io/leaflet/choropleths.html https://stackoverflow.com/questions/47571337/how-to-create-a-choropleth-on-a-leaflet-map-r  Loading packages library(tidyverse) ## ── Attaching packages ─────────────────────────── tidyverse 1.2.1 ── ## ✔ ggplot2 2.</description>
    </item>
    
    <item>
      <title>Shiny e iCOLCAP</title>
      <link>/2018/04/shiny-e-icolcap/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/shiny-e-icolcap/</guid>
      <description>Siguiendo una inversión decepecionante El mercado colombiano ha sido una decepción en los últimos cinco años. Para ver qué tan decepcionado debería estar, cree esta Shiny app. Para no ovlidarme de cómo se construyen en el futuro, acá un tutorial breve comentando selecciones del código:
ui: User Interface En la ui especificamos la organización de los inputs y outputs, aún cuando no hayamos creado estos últimos.
ui &amp;lt;- fluidPage( # Application title titlePanel(&amp;quot;Comparación de Mercado&amp;quot;), # Sidebar with a date input sidebarLayout( dateInput(&amp;quot;fecha_inicial&amp;quot;, &amp;quot;Fecha de inicio de comparación:&amp;quot;, value = &amp;quot;2013-01-01&amp;quot;) # primer argumento input$fecha_inicial, como nos referiremos a esto en server.</description>
    </item>
    
  </channel>
</rss>